<UserControl
  x:Class="DirN.Views.NodeCanvas"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:local="clr-namespace:DirN.Views"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:nd="clr-namespace:DirN.Utils.NgManager"
  xmlns:nodes="clr-namespace:DirN.Views.Node"
  xmlns:prism="http://prismlibrary.com/"
  xmlns:proxy="clr-namespace:DirN.Utils.BindingProxy"
  xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
  xmlns:viewmodels="clr-namespace:DirN.ViewModels"
  d:DataContext="{d:DesignInstance Type=viewmodels:NodeCanvasViewModel}"
  d:DesignHeight="450"
  d:DesignWidth="800"
  prism:ViewModelLocator.AutoWireViewModel="True"
  Loaded="OnLoaded"
  mc:Ignorable="d">
  <UserControl.Resources>
    <proxy:BindingProxy x:Key="BindingProxy" Data="{Binding}" />
  </UserControl.Resources>
  <i:Interaction.Triggers>
    <i:EventTrigger EventName="MouseMove">
      <i:InvokeCommandAction Command="{Binding MouseMoveCommand}" PassEventArgsToCommand="True" />
    </i:EventTrigger>
    <i:EventTrigger EventName="MouseLeftButtonUp">
      <i:InvokeCommandAction Command="{Binding MouseLeftButtonUpCommand}" PassEventArgsToCommand="True" />
    </i:EventTrigger>
    <i:EventTrigger EventName="MouseWheel">
      <i:InvokeCommandAction Command="{Binding MouseWheelCommand}" PassEventArgsToCommand="True" />
    </i:EventTrigger>
  </i:Interaction.Triggers>
  <Grid x:Name="MainCanvas" Background="Transparent">
    <Grid.ContextMenu>
      <ContextMenu DataContext="{StaticResource BindingProxy}" ItemsSource="{Binding Data.NodeGraphicsManager.CanvasContextMenu}">
        <ContextMenu.ItemContainerStyle>
          <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Command" Value="{Binding Command}" />
            <Setter Property="CommandParameter" Value="{Binding CommandParameter}" />
            <Setter Property="AutomationProperties.Name" Value="A" />
          </Style>
        </ContextMenu.ItemContainerStyle>
        <ContextMenu.ItemTemplate>
          <HierarchicalDataTemplate DataType="{x:Type nd:MenuItemInfo}" ItemsSource="{Binding Items}">
            <TextBlock Text="{Binding Header}" />
          </HierarchicalDataTemplate>
        </ContextMenu.ItemTemplate>
      </ContextMenu>
    </Grid.ContextMenu>

    <!--  Multi Selections  -->
    <Canvas
      x:Name="MultiSelection"
      Panel.ZIndex="{Binding SelectionZIndex}"
      Background="Transparent">
      <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseLeftButtonDown">
          <i:InvokeCommandAction Command="{Binding SelectionStartCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseLeftButtonUp">
          <i:InvokeCommandAction Command="{Binding SelectionEndCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseMove">
          <i:InvokeCommandAction Command="{Binding SelectionMoveCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
      </i:Interaction.Triggers>
      <Border
        Canvas.Left="{Binding LeftTopPoint.X}"
        Canvas.Top="{Binding LeftTopPoint.Y}"
        Width="{Binding SelectionSize.Width}"
        Height="{Binding SelectionSize.Height}"
        Background="#3039"
        BorderBrush="AliceBlue"
        Visibility="{Binding SelectionShow, Converter={StaticResource BooleanToVisibilityConverter}}" />
    </Canvas>

    <Grid
      x:Name="CanvasContainer"
      HorizontalAlignment="Stretch"
      VerticalAlignment="Stretch"
      SnapsToDevicePixels="True"
      UseLayoutRounding="True">
      <Grid.RenderTransform>
        <ScaleTransform CenterX="{Binding ElementName=CanvasContainer, Path=ActualWidth, Converter={StaticResource Divide2Converter}}" CenterY="{Binding ElementName=CanvasContainer, Path=ActualHeight, Converter={StaticResource Divide2Converter}}" ScaleX="{Binding NodeGraphicsManager.NodeScale}" ScaleY="{Binding NodeGraphicsManager.NodeScale}" />
      </Grid.RenderTransform>

      <!--  Line Canvas  -->
      <ItemsControl ItemsSource="{Binding NodeGraphicsManager.NodeDetail.BezierCurves}">
        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <Canvas />
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <Path Stroke="{Binding Brush}" StrokeThickness="{Binding Thickness}">
              <Path.Data>
                <PathGeometry>
                  <PathFigure StartPoint="{Binding StartPoint}">
                    <BezierSegment
                      Point1="{Binding ControlPoint1}"
                      Point2="{Binding ControlPoint2}"
                      Point3="{Binding EndPoint}" />
                  </PathFigure>
                </PathGeometry>
              </Path.Data>
            </Path>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ItemsControl>

      <!--  Node Canvas  -->
      <ItemsControl x:Name="NodeItems" ItemsSource="{Binding NodeGraphicsManager.NodeDetail.Nodes}">

        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <Canvas />
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.ItemContainerStyle>
          <Style TargetType="{x:Type ContentPresenter}">
            <Setter Property="Canvas.Left" Value="{Binding Position.X}" />
            <Setter Property="Canvas.Top" Value="{Binding Position.Y}" />
            <Setter Property="Panel.ZIndex" Value="{Binding ZIndex}" />
          </Style>
        </ItemsControl.ItemContainerStyle>
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <Thumb>
              <i:Interaction.Triggers>
                <i:EventTrigger EventName="DragDelta">
                  <i:InvokeCommandAction Command="{Binding DragDeltaCommand}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
                <i:EventTrigger EventName="DragStarted">
                  <i:InvokeCommandAction Command="{Binding DragStartedCommand}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
                <i:EventTrigger EventName="DragCompleted">
                  <i:InvokeCommandAction Command="{Binding DragCompletedCommand}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
              </i:Interaction.Triggers>
              <Thumb.Template>
                <ControlTemplate>
                  <nodes:BaseNode DataContext="{Binding}" />
                </ControlTemplate>
              </Thumb.Template>
            </Thumb>
          </DataTemplate>
        </ItemsControl.ItemTemplate>

      </ItemsControl>

      <!--  Tooltip Canvas  -->
      <ItemsControl IsHitTestVisible="False" ItemsSource="{Binding TooltipManager.Tooltipers}">
        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <Canvas />
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.ItemContainerStyle>
          <Style TargetType="{x:Type ContentPresenter}">
            <Setter Property="Canvas.Left" Value="{Binding Tooltipable.RaisePosition.X}" />
            <Setter Property="Canvas.Top" Value="{Binding Tooltipable.RaisePosition.Y}" />
          </Style>
        </ItemsControl.ItemContainerStyle>
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <ui:Card x:Name="TooltipCard" Padding="2">
              <ui:Card.RenderTransform>
                <TranslateTransform X="{Binding ElementName=TooltipCard, Path=ActualWidth, Converter={StaticResource InverseDivide2Converter}}" Y="{Binding ElementName=TooltipCard, Path=ActualHeight, Converter={StaticResource InverseConverter}}" />
              </ui:Card.RenderTransform>
              <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Foreground="{Binding Colorer.MainBrush}"
                Text="{Binding ToolTipText}" />
            </ui:Card>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ItemsControl>

    </Grid>

    <Canvas x:Name="DecorateCanvas" />
  </Grid>
</UserControl>
